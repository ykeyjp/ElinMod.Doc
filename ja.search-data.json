{"/ElinMod.Doc/docs/":{"data":{"":" YK Framework データ解析 参考資料 "},"title":"Docs"},"/ElinMod.Doc/docs/framework/":{"data":{"":" ⚠️ YK Frameworkもまだまだ開発段階です。なるべく注意はしますがYK Frameworkの更新で製作したModが動作しなくなる可能性があります。ご注意ください。 ","yk-frameworkとは#YK Frameworkとは？":"ゲーム内のUI要素を再利用してMod独自のUI構築をサポートするライブラリです。\n公式にUI用のAPIが用意されているわけではないので、\n単純に目的に合ったUI要素を見つけて再利用するだけではレイアウトや表示の崩れを招きます。\nYK Frameworkではそうした調整処理を行い、汎用的に使えるパーツとして提供します。","マイルストーン#マイルストーン":"Elin（と言うよりUnity）のUIへの理解を深めるためのステップ案です。\n理解が進めば最終的にYK Frameworkを使用しなくても自身のModでUI構築が可能になることでしょう。\nStep 1 YK Frameworkの基本機能でUIの構築をお楽しみください。\nStep 2 YK Frameworkで生成されるUI要素のパラメーターを独自に弄ってみてください。\nStep 3 YK Frameworkに無い要素をゲーム内から見つけ、自身のModに組み込んでみてください。\nStep 4 自分なりのUtilityライブラリを作ってみてください。\nこの分野は研究的な側面が強いので、理解を深めるため車輪の再開発と厭わずチャレンジしてみてください。","使用に関しての注意事項#使用に関しての注意事項":"本ライブラリで使用される技術はゲーム解析のもと実現されており、ゲームのバージョンアップによる互換性の保証は一切ありません。\nある日突然表示が崩れたり、エラーを起こして処理が停止する可能性があります。\nこれらはライブラリに起因する問題ではありますが、ご利用は自己責任のもと行っていただき、代替処理の実装やワークショップのコメント欄で行われるフィードバックへの対応も各自ご対応ください。","開発コンセプト#開発コンセプト":"最小限の手間でそれなりのUIが作れる、をコンセプトに製作しています。\n凝った装飾や多機能な要素については提供の予定はありません。\nそういった高級なUIはご自身で研究し実現いただき、何らかの形でElin Mod界隈にフィードバックいただければ幸いです。"},"title":"YK Framework"},"/ElinMod.Doc/docs/framework/element/":{"data":{"":"とてもシンプルな例とともにUI要素の配置について説明します。 UIの構造はツリー状のような構造で表現されます。\n次の例では縦にテキストの「表示するテキスト１」「表示するテキスト２」と、ボタンの「ボタンのテキスト」が並ぶ構成です。\nvar window = this.Window(640, 480, \"カスタムウィンドウ\"); var layout = window.Vertical(); layout.Text(\"表示するテキスト１\"); layout.Text(\"表示するテキスト２\"); layout.Button(\"ボタンのテキスト\", () =\u003e { Debug.Log(\"Pressed!\"); }); 構造を図で示すと次のようになります。\ngraph LR; Window--\u003eVertical; Vertical--\u003eText1; Vertical--\u003eText2; Vertical--\u003eButton;順序は宣言した順になるので、ボタンなどのインタラクティブな要素で、ほかの要素を参照する処理が必要な場合は注意が必要です。\n次の例のようにあらかじめ変数textを宣言して対応します。\nvar window = this.Window(640, 480, \"カスタムウィンドウ\"); var layout = window.Vertical(); layout.Text(\"表示するテキスト１\"); UIHost\u003cUIText\u003e = text; layout.Button(\"ボタンのテキスト\", () =\u003e { /* 変数[text]をゴニョゴニョする */ }); text = layout.Text(\"表示するテキスト２\"); 例に挙げたVerticalやText意外にもたくさんのUI要素が用意されています。\nこれらはリファレンスで詳細を確認できます。"},"title":"UI要素の作成"},"/ElinMod.Doc/docs/framework/introduction/":{"data":{"":"","modのサブスクライブ#Modのサブスクライブ":"SteamワークショップからYK Frameworkを購読します。\nYK Framework on Steam ","実際にコードを書いてみる#実際にコードを書いてみる":"次のレイヤーの作成セクションで実際にUIを構築してみましょう。","開発ツールの参照設定#開発ツールの参照設定":"Unity,Visual Studio,Visual Studio Codeなどお使いの開発ツールの参照設定でYK FrameworkのDLL参照を追加してください。\nWindowの場合は下記のパスにダウンロードされています。\nC:\\Program Files (x86)\\Steam\\steamapps\\workshop\\content\\2135150\\3379866147\\YkeyFramework.dll "},"title":"導入"},"/ElinMod.Doc/docs/framework/layer/":{"data":{"":"まず始めにWindow（レイヤー）を定義します。\nWinddowに渡したいデータがあれば、IBuildUIArgsを継承した構造体にプロパティを定義しておきます。\n例えばキャラクターを参照するようなUIを作る場合にはCharaをプロパティに含めます。\nアイテムであればThingをプロパティに含めます。\nここでは一例ですので空の構造体とします。\npublic struct CustomArgs : IBuildUIArgs { } public class CustomWindow : BuildUI\u003cCustomArgs\u003e { public override BuildUI\u003cCustomArgs\u003e Setup(CustomArgs args) { var window = this.Window(640, 480, \"カスタムウィンドウ\"); return this; } } BuildUIを継承したクラスでUIを構築する処理を記述します。Setupはその処理を記述するメソッドです。\n引数でIBuildUIArgsを経書した構造体が渡されますので、CharaやThingの参照はここから取得してください。\n上の例で唯一記述されているthis.WindowメソッドはUIのベースとなるウィンドウを生成する命令です。\n定義された内容を箇条書きでまとめると次の通りです。\nCustomArgsと言う構造体を宣言。データは何も持たない。 CustomWindowと言うウィンドウを宣言。 呼び出し時はサイズ640x480のウィンドウが生成される（タイトルはとりあえずカスタムウィンドウ） 続いてUI要素の作成セクションでウィンドウに配置するパーツについて学んでみましょう。"},"title":"レイヤー作成"},"/ElinMod.Doc/docs/framework/refferences/":{"data":{"":"クラスライブラリとしてのリファレンスをまとめています。\n最新のバージョンに合わせて内容は更新しますが、更新が遅れる場合もあります。","その他#その他":" Spacerただの余白 ","ほかの要素を内包する要素#ほかの要素を内包する要素":" WindowUIの基礎となる要素 Vertical要素を縦に並べる Horizontal要素を横に並べる ScrollableスクロールできるVertical Grid折り返しが可能 ","インタラクティブな要素#インタラクティブな要素":" InputTextキーボードの入力を受け付ける Buttonシンプルなボタン ButtonRowボタンを並べる ToggleON/OFFのスイッチ DropDownいくつかの候補から選択 Sliderシンプルなスライダー SliderLabelテキスト付きのスライダー ","テキスト表示を行う要素#テキスト表示を行う要素":" Headerアイコンで装飾されたテキスト Topicラベルとデータを表示できる Text変哲もないテキスト "},"title":"リファレンス"},"/ElinMod.Doc/docs/references/links/":{"data":{"":"","discordサーバー#Discordサーバー":"Elinに関するコミュニケーションはこの中で行われています。Mod製作者は#elin-modを覗いてみましょう。\nElona ","elin-modding-wiki#Elin Modding Wiki":"Elin Modの製作におけるHowToを掲載しているWiki。\nMod製作の環境構築や製作手法をステップごとに解説するArchiveをはじめ、アイテム追加などで必要となるSourceCard.xlsxの雛形のリンクなど重要な情報が多数集められています。\nElin Modding Wiki ","github#GitHub":"個人的にDiscordでお世話になっている方々のGitHubページです。各分野の専門性高いコードが拝見できます。\nkuronekotei yuzutuki Drakeny ","ylvania#Ylvania":"Elinの作者noa氏のサイトです。ご挨拶をかねて一度は参拝しましょう。\nYlvania ","ylvapedia#Ylvapedia":"Elinの公式Wikiです。ここに書かれている情報は基礎知識としていつでも参照できるようにしておきましょう。\nただし更新遅れている情報もありますのでご注意を。可能なら更新へご協力よろしくお願いします。\nYlvapedia ","開発小部屋ylvania内#開発小部屋（Ylvania内）":"前提的、基本的な情報が掲載されています。情報収集はまずここから始めてみましょう。\n開発小部屋 "},"title":"リンク"},"/ElinMod.Doc/docs/references/prefab/":{"data":{"":"","リソースid#リソースID":"UnityのPrefabに格納されているデータ（いわゆるGameObject）のリソースIDで、 UnityEngine.Resources.Loadメソッドで呼び出せる文字列形式のキーを収集したリストです。\n（準備中） ⚠️ 実際にUnityEngine.Resources.Load(\"リソースID\")をコールすれば生成されますが、内容や用途を確認していないものも多いので、検証の際は壊れても良いセーブデータで使用してください。\nオブジェクトを生成するだけで、セーブデータに反映されるような処理はないと思いますが念のため。 "},"title":"内部リソース"}}